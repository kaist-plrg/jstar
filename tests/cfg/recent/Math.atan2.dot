digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let ny = [? __x0__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=diamond, label=<<font color="black">(= ny Infinity)</font>> color="black" fillcolor="white" style=filled]
  node14 [shape=diamond, label=<<font color="black">(= ny 0i)</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=cds, label=<<font color="black">1:app __x1__ = (ToNumber x)</font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return NaN</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:??? &quot;If id:{nx} is value:{+&infin;} , return an implementation - approximated value representing - &pi; / 4 .&quot;</td></tr>
      <tr><td align="left">9:??? &quot;If id:{nx} is value:{-&infin;} , return an implementation - approximated value representing - 3 &pi; / 4 .&quot;</td></tr>
      <tr><td align="left">10:??? &quot;Return an implementation - approximated value representing - &pi; / 2 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app y = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">13:??? &quot;Return an implementation - approximated value representing &pi; .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=diamond, label=<<font color="black">(= ny -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:let nx = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">app x = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=diamond, label=<<font color="black">(= ny -0.0)</font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:??? &quot;If id:{nx} is value:{+&infin;} , return an implementation - approximated value representing &pi; / 4 .&quot;</td></tr>
      <tr><td align="left">5:??? &quot;If id:{nx} is value:{-&infin;} , return an implementation - approximated value representing 3 &pi; / 4 .&quot;</td></tr>
      <tr><td align="left">6:??? &quot;Return an implementation - approximated value representing &pi; / 2 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node8 [shape=diamond, label=<<font color="black">(|| (= ny NaN) (= nx NaN))</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=cds, label=<<font color="black">0:app __x0__ = (ToNumber y)</font>> color="black" fillcolor="white" style=filled]
  node15 [shape=diamond, label=<<font color="black">(|| (&lt; 0i nx) (= nx 0i))</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:??? &quot;If id:{nx} is value:{-&infin;} , return an implementation - approximated value representing &pi; .&quot;</td></tr>
      <tr><td align="left">21:??? &quot;If id:{nx} is value:{+0} or id:{nx} is value:{-0} , return an implementation - approximated value representing &pi; / 2 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return -0.0</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">24:??? &quot;If id:{nx} is value:{-&infin;} , return an implementation - approximated value representing - &pi; .&quot;</td></tr>
      <tr><td align="left">25:??? &quot;If id:{nx} is value:{+0} or id:{nx} is value:{-0} , return an implementation - approximated value representing - &pi; / 2 .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node28 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">return -0.0</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">16:??? &quot;Return an implementation - approximated value representing - &pi; .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=diamond, label=<<font color="black">(&lt; 0i ny)</font>> color="black" fillcolor="white" style=filled]
  node27 [shape=diamond, label=<<font color="black">(= nx Infinity)</font>> color="black" fillcolor="white" style=filled]
  node26 [shape=diamond, label=<<font color="black">(&lt; ny 0i)</font>> color="black" fillcolor="white" style=filled]
  node23 [shape=diamond, label=<<font color="black">(= nx Infinity)</font>> color="black" fillcolor="white" style=filled]
  node30 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:??? &quot;Return an implementation - approximated value representing the result of the inverse tangent of the quotient ℝ ( id:{ny} ) / ℝ ( id:{nx} ) .&quot;</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node19 [shape=diamond, label=<<font color="black">(|| (&lt; 0i nx) (= nx 0i))</font>> color="black" fillcolor="white" style=filled]
  node7 -> node8 [ color="black"]
  node10 -> node11 [label=<<font color="black">true</font>> color="black"]
  node10 -> node12 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node11 -> node12 [ color="black"]
  node13 -> node14 [ color="black"]
  node6 -> node7 [ color="black"]
  node27 -> node28 [label=<<font color="black">true</font>> color="black"]
  node27 -> node29 [label=<<font color="black">false</font>> color="black"]
  node25 -> node26 [ color="black"]
  node21 -> node22 [ color="black"]
  node23 -> node24 [label=<<font color="black">true</font>> color="black"]
  node23 -> node25 [label=<<font color="black">false</font>> color="black"]
  node8 -> node9 [label=<<font color="black">true</font>> color="black"]
  node8 -> node10 [label=<<font color="black">false</font>> color="black"]
  node17 -> node18 [ color="black"]
  node12 -> node13 [label=<<font color="black">true</font>> color="black"]
  node12 -> node14 [label=<<font color="black">false</font>> color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node28 -> node29 [ color="black"]
  node29 -> node30 [ color="black"]
  node26 -> node27 [label=<<font color="black">true</font>> color="black"]
  node26 -> node30 [label=<<font color="black">false</font>> color="black"]
  node14 -> node15 [label=<<font color="black">true</font>> color="black"]
  node14 -> node18 [label=<<font color="black">false</font>> color="black"]
  node18 -> node19 [label=<<font color="black">true</font>> color="black"]
  node18 -> node22 [label=<<font color="black">false</font>> color="black"]
  node0 -> node2 [ color="black"]
  node19 -> node20 [label=<<font color="black">true</font>> color="black"]
  node19 -> node21 [label=<<font color="black">false</font>> color="black"]
  node15 -> node16 [label=<<font color="black">true</font>> color="black"]
  node15 -> node17 [label=<<font color="black">false</font>> color="black"]
  node9 -> node10 [ color="black"]
  node4 -> node5 [ color="black"]
  node30 -> node1 [ color="black"]
  node20 -> node21 [ color="black"]
  node24 -> node25 [ color="black"]
  node16 -> node17 [ color="black"]
  node22 -> node23 [label=<<font color="black">true</font>> color="black"]
  node22 -> node26 [label=<<font color="black">false</font>> color="black"]
}
