digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=cds, label=<<font color="black">1:app __x0__ = (ValidateTypedArray O)</font>> color="black" fillcolor="white" style=filled]
  node10 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">4:let kept = (new [])</td></tr>
      <tr><td align="left">5:let k = 0i</td></tr>
      <tr><td align="left">6:let captured = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=cds, label=<<font color="black">9:app __x3__ = (Get O Pk)</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:let len = O.ArrayLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">8:let Pk = [! __x2__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app callbackfn = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=cds, label=<<font color="black">10:app __x5__ = (ToBoolean [? __x4__])</font>> color="black" fillcolor="white" style=filled]
  node12 [shape=cds, label=<<font color="black">8:app __x2__ = (ToString k)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=cds, label=<<font color="black">3:app __x1__ = (IsCallable callbackfn)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">app thisArg = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">10:let selected = [! __x5__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=cds, label=<<font color="black">10:app __x4__ = (Call callbackfn thisArg (new [kValue, k, O]))</font>> color="black" fillcolor="white" style=filled]
  node11 [shape=diamond, label=<<font color="black">(&lt; k len)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=diamond, label=<<font color="black">(= __x1__ false)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=diamond, label=<<font color="black">(= selected true)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">9:let kValue = [! __x3__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node24 [shape=diamond, label=<<font color="black">(&lt; __x8__ __x7__.length)</font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let e = __x7__[__x8__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">12:append kValue -&gt; kept</td></tr>
      <tr><td align="left">13:captured = (+ captured 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:return A</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node28 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:[! __x10__]</td></tr>
      <tr><td align="left">19:n = (+ n 1i)</td></tr>
      <tr><td align="left">__x8__ = (+ __x8__ 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">14:k = (+ k 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=cds, label=<<font color="black">15:app __x6__ = (TypedArraySpeciesCreate O (new [captured]))</font>> color="black" fillcolor="white" style=filled]
  node27 [shape=cds, label=<<font color="black">18:app __x10__ = (Set A [! __x9__] e true)</font>> color="black" fillcolor="white" style=filled]
  node26 [shape=cds, label=<<font color="black">18:app __x9__ = (ToString n)</font>> color="black" fillcolor="white" style=filled]
  node23 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let A = [? __x6__]</td></tr>
      <tr><td align="left">16:let n = 0i</td></tr>
      <tr><td align="left">17:let __x7__ = kept</td></tr>
      <tr><td align="left">17:let __x8__ = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node24 -> node25 [label=<<font color="black">true</font>> color="black"]
  node24 -> node29 [label=<<font color="black">false</font>> color="black"]
  node28 -> node24 [ color="black"]
  node13 -> node14 [ color="black"]
  node12 -> node13 [ color="black"]
  node9 -> node10 [ color="black"]
  node27 -> node28 [ color="black"]
  node26 -> node27 [ color="black"]
  node10 -> node11 [ color="black"]
  node4 -> node5 [ color="black"]
  node25 -> node26 [ color="black"]
  node20 -> node21 [ color="black"]
  node29 -> node1 [ color="black"]
  node16 -> node17 [ color="black"]
  node8 -> node9 [label=<<font color="black">true</font>> color="black"]
  node8 -> node10 [label=<<font color="black">false</font>> color="black"]
  node17 -> node18 [ color="black"]
  node21 -> node11 [ color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node7 -> node8 [ color="black"]
  node18 -> node19 [ color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node0 -> node2 [ color="black"]
  node19 -> node20 [label=<<font color="black">true</font>> color="black"]
  node19 -> node21 [label=<<font color="black">false</font>> color="black"]
  node11 -> node12 [label=<<font color="black">true</font>> color="black"]
  node11 -> node22 [label=<<font color="black">false</font>> color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node23 -> node24 [ color="black"]
  node14 -> node15 [ color="black"]
}
