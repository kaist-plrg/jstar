digraph {
  node0 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node5 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">0:let O = this</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node10 [shape=diamond, label=<<font color="black">(= relativeTarget -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node1 [shape=circle label=" " color="black" fillcolor="white" style=filled]
  node6 [shape=cds, label=<<font color="black">1:app __x0__ = (ValidateTypedArray O)</font>> color="black" fillcolor="white" style=filled]
  node2 [shape=cds, label=<<font color="black">app target = (GetArgument argumentsList 0i)</font>> color="black" fillcolor="white" style=filled]
  node8 [shape=cds, label=<<font color="black">3:app __x1__ = (ToIntegerOrInfinity target)</font>> color="black" fillcolor="white" style=filled]
  node4 [shape=cds, label=<<font color="black">app end = (GetArgument argumentsList 2i)</font>> color="black" fillcolor="white" style=filled]
  node42 [shape=diamond, label=<<font color="black">(= __x11__ true)</font>> color="black" fillcolor="white" style=filled]
  node24 [shape=cds, label=<<font color="black">app __x6__ = (min relativeStart len)</font>> color="black" fillcolor="white" style=filled]
  node37 [shape=cds, label=<<font color="black">15:app __x10__ = (min (- final from) (- len to))</font>> color="black" fillcolor="white" style=filled]
  node25 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let from = __x6__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node52 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">34:__x13__</td></tr>
      <tr><td align="left">35:fromByteIndex = (+ fromByteIndex direction)</td></tr>
      <tr><td align="left">36:toByteIndex = (+ toByteIndex direction)</td></tr>
      <tr><td align="left">37:countBytes = (- countBytes 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node14 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let to = __x2__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node20 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let from = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node46 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">27:let direction = -1i</td></tr>
      <tr><td align="left">28:fromByteIndex = (- (+ fromByteIndex countBytes) 1i)</td></tr>
      <tr><td align="left">29:toByteIndex = (- (+ toByteIndex countBytes) 1i)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node29 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = [? __x7__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node21 [shape=diamond, label=<<font color="black">(&lt; relativeStart 0i)</font>> color="black" fillcolor="white" style=filled]
  node33 [shape=cds, label=<<font color="black">app __x8__ = (max (+ len relativeEnd) 0i)</font>> color="black" fillcolor="white" style=filled]
  node28 [shape=cds, label=<<font color="black">app __x7__ = (ToIntegerOrInfinity end)</font>> color="black" fillcolor="white" style=filled]
  node38 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">15:let count = __x10__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node9 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">3:let relativeTarget = [? __x1__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node53 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">38:return O</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node13 [shape=cds, label=<<font color="black">app __x2__ = (max (+ len relativeTarget) 0i)</font>> color="black" fillcolor="white" style=filled]
  node41 [shape=cds, label=<<font color="black">19:app __x11__ = (IsDetachedBuffer buffer)</font>> color="black" fillcolor="white" style=filled]
  node45 [shape=diamond, label=<<font color="black">(&amp;&amp; (&lt; fromByteIndex toByteIndex) (&lt; toByteIndex (+ fromByteIndex countBytes)))</font>> color="black" fillcolor="white" style=filled]
  node17 [shape=cds, label=<<font color="black">7:app __x4__ = (ToIntegerOrInfinity start)</font>> color="black" fillcolor="white" style=filled]
  node32 [shape=diamond, label=<<font color="black">(&lt; relativeEnd 0i)</font>> color="black" fillcolor="white" style=filled]
  node34 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x8__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node22 [shape=cds, label=<<font color="black">app __x5__ = (max (+ len relativeStart) 0i)</font>> color="black" fillcolor="white" style=filled]
  node44 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">20:let typedArrayName = O.TypedArrayName</td></tr>
      <tr><td align="left">21:??? &quot;Let id:{elementSize} be the Element Size value specified in link:{unhandled: table-the-typedarray-constructors} for id:{typedArrayName} .&quot;</td></tr>
      <tr><td align="left">22:let byteOffset = O.ByteOffset</td></tr>
      <tr><td align="left">23:let toByteIndex = (+ (* to elementSize) byteOffset)</td></tr>
      <tr><td align="left">24:let fromByteIndex = (+ (* from elementSize) byteOffset)</td></tr>
      <tr><td align="left">25:let countBytes = (* count elementSize)</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node27 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let relativeEnd = len</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node12 [shape=diamond, label=<<font color="black">(&lt; relativeTarget 0i)</font>> color="black" fillcolor="white" style=filled]
  node49 [shape=cds, label=<<font color="black">33:app __x12__ = (GetValueFromBuffer buffer fromByteIndex CONST_Uint8 true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node7 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">1:[? __x0__]</td></tr>
      <tr><td align="left">2:let len = O.ArrayLength</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node39 [shape=diamond, label=<<font color="black">(&lt; 0i count)</font>> color="black" fillcolor="white" style=filled]
  node3 [shape=cds, label=<<font color="black">app start = (GetArgument argumentsList 1i)</font>> color="black" fillcolor="white" style=filled]
  node35 [shape=cds, label=<<font color="black">app __x9__ = (min relativeEnd len)</font>> color="black" fillcolor="white" style=filled]
  node48 [shape=diamond, label=<<font color="black">(&lt; 0i countBytes)</font>> color="black" fillcolor="white" style=filled]
  node18 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">7:let relativeStart = [? __x4__]</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node50 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">33:let value = __x12__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node16 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let to = __x3__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node31 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node11 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let to = 0i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node43 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">throw TypeError</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node40 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">18:let buffer = O.ViewedArrayBuffer</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node26 [shape=diamond, label=<<font color="black">(= end undefined)</font>> color="black" fillcolor="white" style=filled]
  node23 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let from = __x5__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node36 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let final = __x9__</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node30 [shape=diamond, label=<<font color="black">(= relativeEnd -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node51 [shape=cds, label=<<font color="black">34:app __x13__ = (SetValueInBuffer buffer toByteIndex CONST_Uint8 value true CONST_Unordered)</font>> color="black" fillcolor="white" style=filled]
  node19 [shape=diamond, label=<<font color="black">(= relativeStart -Infinity)</font>> color="black" fillcolor="white" style=filled]
  node47 [shape=none, margin=0, label=<<font color="black">
    <table border="0" cellborder="1" cellspacing="0" cellpadding="10">
      <tr><td align="left">let direction = 1i</td></tr>
    </table>
  </font>> color="black" fillcolor="white" style=filled]
  node15 [shape=cds, label=<<font color="black">app __x3__ = (min relativeTarget len)</font>> color="black" fillcolor="white" style=filled]
  node26 -> node27 [label=<<font color="black">true</font>> color="black"]
  node26 -> node28 [label=<<font color="black">false</font>> color="black"]
  node27 -> node30 [ color="black"]
  node20 -> node26 [ color="black"]
  node34 -> node37 [ color="black"]
  node21 -> node22 [label=<<font color="black">true</font>> color="black"]
  node21 -> node24 [label=<<font color="black">false</font>> color="black"]
  node23 -> node26 [ color="black"]
  node8 -> node9 [ color="black"]
  node24 -> node25 [ color="black"]
  node31 -> node37 [ color="black"]
  node53 -> node1 [ color="black"]
  node49 -> node50 [ color="black"]
  node5 -> node6 [ color="black"]
  node3 -> node4 [ color="black"]
  node28 -> node29 [ color="black"]
  node29 -> node30 [ color="black"]
  node7 -> node8 [ color="black"]
  node11 -> node17 [ color="black"]
  node18 -> node19 [ color="black"]
  node48 -> node49 [label=<<font color="black">true</font>> color="black"]
  node48 -> node53 [label=<<font color="black">false</font>> color="black"]
  node10 -> node11 [label=<<font color="black">true</font>> color="black"]
  node10 -> node12 [label=<<font color="black">false</font>> color="black"]
  node2 -> node3 [ color="black"]
  node15 -> node16 [ color="black"]
  node13 -> node14 [ color="black"]
  node35 -> node36 [ color="black"]
  node0 -> node2 [ color="black"]
  node19 -> node20 [label=<<font color="black">true</font>> color="black"]
  node19 -> node21 [label=<<font color="black">false</font>> color="black"]
  node36 -> node37 [ color="black"]
  node22 -> node23 [ color="black"]
  node6 -> node7 [ color="black"]
  node43 -> node44 [ color="black"]
  node9 -> node10 [ color="black"]
  node12 -> node13 [label=<<font color="black">true</font>> color="black"]
  node12 -> node15 [label=<<font color="black">false</font>> color="black"]
  node44 -> node45 [ color="black"]
  node37 -> node38 [ color="black"]
  node40 -> node41 [ color="black"]
  node30 -> node31 [label=<<font color="black">true</font>> color="black"]
  node30 -> node32 [label=<<font color="black">false</font>> color="black"]
  node42 -> node43 [label=<<font color="black">true</font>> color="black"]
  node42 -> node44 [label=<<font color="black">false</font>> color="black"]
  node47 -> node48 [ color="black"]
  node50 -> node51 [ color="black"]
  node4 -> node5 [ color="black"]
  node51 -> node52 [ color="black"]
  node25 -> node26 [ color="black"]
  node16 -> node17 [ color="black"]
  node46 -> node48 [ color="black"]
  node38 -> node39 [ color="black"]
  node32 -> node33 [label=<<font color="black">true</font>> color="black"]
  node32 -> node35 [label=<<font color="black">false</font>> color="black"]
  node39 -> node40 [label=<<font color="black">true</font>> color="black"]
  node39 -> node53 [label=<<font color="black">false</font>> color="black"]
  node17 -> node18 [ color="black"]
  node52 -> node48 [ color="black"]
  node45 -> node46 [label=<<font color="black">true</font>> color="black"]
  node45 -> node47 [label=<<font color="black">false</font>> color="black"]
  node41 -> node42 [ color="black"]
  node14 -> node17 [ color="black"]
  node33 -> node34 [ color="black"]
}
